@inject NavigationManager Navigation
@using System.Text.Json.Serialization
@inject IJSRuntime JSRuntime
@inject IAppData appData
@inject LocalStorageAccessor LocalStorageAccessor
@inject IRSData irsData
@inject IJSRuntime JS

<div style=position:absolute;left:0px;padding:10px>
    <a href=/profiles>Switch Profile</a>
</div
<div style=position:absolute;right:0px;padding:10px>
     Data is <a style=margin-left:0px href=/about>kept private</a>: <button @onclick=@Save>Save</button> or 
    <button @onclick=@Clear>Erase</button>
</div>

@code{    

    private async Task Save() {
        await ProfileUtilities.Save(appData.CurrentProfileKey, appData.FamilyData);
    }    

    private async Task Clear() {
        ProfileUtilities.Clear(appData, irsData);
        Navigation.NavigateTo("/");
    }

    protected override async Task OnInitializedAsync()
    {
        ProfileUtilities.LocalStorageAccessor = LocalStorageAccessor;
        appData.CurrentProfileName = "primary";
        await ProfileUtilities.Load(appData);

        var keys = new List<string>();
        var keysJsonElement = await LocalStorageAccessor.GetKeys();
        foreach (var el in keysJsonElement.EnumerateArray())
        {
            string? value = el.GetString();
            if (value != null) {
                switch (value) {
                    case "i18nextLng":
                        break;
                    case "localSave":
                        keys.Add("primary");
                        break;
                    default:
                        keys.Add(value);
                        break;
                }
            }
        }

        appData.ProfileNames = keys;
    }
}
